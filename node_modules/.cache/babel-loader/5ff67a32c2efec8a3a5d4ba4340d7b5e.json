{"ast":null,"code":"import _objectSpread from \"/Users/nitairoy/twinkle/react-crash-course/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nitairoy/twinkle/react-crash-course/src/Components/Controller/Controller.js\";\nimport React, { Component } from 'react';\n\nclass Controller extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: true,\n      pause: false,\n      lap: false,\n      reset: false\n    };\n  }\n\n  startHandler() {\n    this.setState(_objectSpread({}, this.state, {\n      start: false,\n      pause: true,\n      lap: true\n    }));\n  }\n\n  getController() {\n    let output = null;\n\n    if (this.state.start && !this.state.reset) {\n      output = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-sucess btn-lg px-5\",\n        onClick: event => this.startHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Start\"));\n    } else if (this.state.pause && this.state.lap) {\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-sucess btn-lg px-5\",\n        onClick: event => this.pauseHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Pause\"), React.createElement(\"button\", {\n        className: \"btn btn-sucess btn-lg px-5\",\n        onClick: event => this.lapHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Lap\"));\n    }\n\n    return output;\n  }\n\n  render() {\n    return this.getController();\n  }\n\n}\n\nexport default Controller;","map":{"version":3,"sources":["/Users/nitairoy/twinkle/react-crash-course/src/Components/Controller/Controller.js"],"names":["React","Component","Controller","constructor","props","state","start","pause","lap","reset","startHandler","setState","getController","output","event","pauseHandler","lapHandler","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,MAAMC,UAAN,SAAyBD,SAAzB,CAAkC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,GAAG,EAAE,KAHI;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAQH;;AAGLC,EAAAA,YAAY,GAAE;AACV,SAAKC,QAAL,mBACO,KAAKN,KADZ;AAEIC,MAAAA,KAAK,EAAE,KAFX;AAGIC,MAAAA,KAAK,EAAE,IAHX;AAIIC,MAAAA,GAAG,EAAE;AAJT;AAOH;;AAGDI,EAAAA,aAAa,GAAE;AACX,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAG,KAAKR,KAAL,CAAWC,KAAX,IAAoB,CAAC,KAAKD,KAAL,CAAWI,KAAnC,EAAyC;AACrCI,MAAAA,MAAM,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,SAAS,EAAC,4BADV;AAEA,QAAA,OAAO,EAAKC,KAAK,IAAI,KAAKJ,YAAL,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AASH,KAVD,MAUO,IAAI,KAAKL,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWG,GAAnC,EAAuC;AAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACA,QAAA,SAAS,EAAC,4BADV;AAEA,QAAA,OAAO,EAAKM,KAAK,IAAI,KAAKC,YAAL,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAMA;AACA,QAAA,SAAS,EAAC,4BADV;AAEA,QAAA,OAAO,EAAKD,KAAK,IAAI,KAAKE,UAAL,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANA;AAaH;;AACD,WAAOH,MAAP;AACH;;AAGGI,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKL,aAAL,EAAP;AACH;;AA5D6B;;AA+DlC,eAAeV,UAAf","sourcesContent":["import React, { Component } from 'react'\n\n\n\nclass Controller extends Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            start: true,\n            pause: false,\n            lap: false,\n            reset: false\n        }\n\n        \n    }\n\n\nstartHandler(){\n    this.setState({\n        ...this.state,\n        start: false,\n        pause: true,\n        lap: true\n    })\n\n}\n\n\ngetController(){\n    let output = null\n\n    if(this.state.start && !this.state.reset){\n        output = (\n            <div>\n                <button \n                className=\"btn btn-sucess btn-lg px-5\"\n                onClick = { event => this.startHandler()}\n                >Start\n                </button>\n            </div>\n        )\n    } else if (this.state.pause && this.state.lap){\n        <div>\n        <button \n        className=\"btn btn-sucess btn-lg px-5\"\n        onClick = { event => this.pauseHandler()}\n        >Pause\n        </button>\n        <button \n        className=\"btn btn-sucess btn-lg px-5\"\n        onClick = { event => this.lapHandler()}\n        >Lap\n        </button>\n    </div>\n\n    }\n    return output\n}\n\n\n    render(){\n        return this.getController()\n    }\n\n} \nexport default Controller"]},"metadata":{},"sourceType":"module"}